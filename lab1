#include <iostream>
#include <string>
using namespace std;

struct Product {
    string name;
    int weight;
    double price;
    Product* next; 
    Product(string name, int w, double p);
};

Product::Product(string name, int w, double p) : name(name), weight(w), price(p), next(nullptr) {}

class LinkedList {
private:
    Product* head;
public:
    LinkedList() : head(nullptr) {}
    
    ~LinkedList(){
        while (head) {
            Product* temp = head;
            head = head->next;
            delete temp;
        }
    }
    
    void addFirst(string name, int weight, double price) {
        Product* newProduct = new Product(name, weight, price);
        newProduct->next = head;
        head = newProduct;
    }
    
    void addLast(string name, int weight, double price) {
        Product* newProduct = new Product(name, weight, price);
        if (!head) {
            head = newProduct;
        }
        else {
            Product* temp = head;
            while (temp->next) {
                temp = temp->next;
            }
            temp->next = newProduct;
        }
    }
    
    void addAfter(string target, string name, int weight, double price) {
        Product* temp = head;
        while (temp) {
            if (temp->name == target) { 
                Product* newProduct = new Product(name, weight, price);
                newProduct->next = temp->next;
                temp->next = newProduct;
                return;
            }
            temp = temp->next;
        }
        cout << "Элемент не найден" << endl;
    }
    
    void addBefore(string target, string name, int weight, double price) {
        if (head && head->name == target) {
            addFirst(name, weight, price);
            return;
        }
        Product* temp = head;
        while (temp && temp->next) {
            if (temp->next->name == target) {
                Product* newProduct = new Product(name, weight, price);
                newProduct->next = temp->next;
                temp->next = newProduct;
                return;
            }
            temp = temp->next;
        }
        cout << "Элемент не найден" << endl;
    }
    
    void delete_element(string name) {
        if (!head) {
            cout << "Список пустой" << endl;
            return;
        }
        if (head->name == name) {
            Product* temp = head;
            head = head->next;
            delete temp;
            return;
        }
        Product* temp = head;
        while (temp->next && temp->next->name != name) {
            temp = temp->next;
        }
        if (temp->next) {
            Product* toDelete = temp->next;
            temp->next = temp->next->next;
            delete toDelete;
        } else {
            cout << "Элемент не найден" << endl;
        }
    }
    
    void printList() {
        Product* temp = head;
        while (temp) {
            cout << "Название: " << temp->name << ", Вес: " << temp->weight << ", Цена: " << temp->price << endl;
            temp = temp->next;
        }
    }
};

int main() {
    LinkedList list; 
    
    list.addFirst("Груша", 1, 120.5);
    list.addLast("Арбуз", 8, 459.3);
    list.addLast("Дыня", 7, 375.4);
    
    cout << "Начальный список: " << endl;
    list.printList();
    
    list.addAfter("Груша", "Гранат", 2, 384.2);
    cout << "Список после добавления после заданного элемента: " << endl;
    list.printList();
    
    list.addBefore("Арбуз", "Абрикос", 1, 345.1);
    cout << "Список после добавления перед элементом: " << endl;
    list.printList();
    
    list.delete_element("Арбуз");
    cout << "Список после удаления элемента: " << endl;
    list.printList();
    
    return 0;  
}
